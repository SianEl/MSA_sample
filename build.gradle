buildscript {
    ext {
        springBootVersion = '2.7.5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:1.1.0"
    }
}

// 하위 모든 프로젝트 공통 세팅
subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group 'org.example'
    version '1.0-SNAPSHOT'

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2021.0.4")
    }

    // 하위 모듈에서 공통으로 사용하는 세팅 추가
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        compileOnly 'org.projectlombok:lombok'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        annotationProcessor 'org.projectlombok:lombok'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

        if(project.name.startsWith("demo-api")) {
            compile project(":demo-common")
        } else if(project.name.startsWith("demo-web")) {
            compile project(":demo-common")
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}

// eureka-server 모듈에서만 수행
project(":eureka-server") {
    ext {
        set('springCloudVersion', "2021.0.4")
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-core") {
    bootJar.enabled=false
    jar.enabled=true

    dependencies {
        compile 'io.jsonwebtoken:jjwt:0.9.1'

        // jwt관련 dependency -> jdk11에서 관련 모듈이 기본 참조되어 있지 않아 추가
        compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
        compile group: 'com.sun.xml.bind', name: 'jaxb-core', version: '2.3.0.1'
        compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-common") {
    bootJar.enabled=false
    jar.enabled=true

    dependencies {
        compile project(":demo-core")
        compile ('mysql:mysql-connector-java')//MySql
        compile 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2' //mybatis
        compile 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4' //Jasypt

        compile 'org.springframework.boot:spring-boot-starter-web' //spring-web
        compile 'org.springframework.boot:spring-boot-starter-thymeleaf' //thymeleaf
        compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect' //thymeleaf-layout

        compile 'org.springframework.boot:spring-boot-starter-data-redis' //redis
        compile 'com.navercorp.lucy:lucy-xss-servlet:2.0.0' //xxs
    }
}

project(":demo-api-user") {


    dependencies {

    }


    tasks.named('test') {
        useJUnitPlatform()
    }
}

project("demo-api-system") {


    dependencies {

    }



    tasks.named('test') {
        useJUnitPlatform()
        systemProperty "jasypt.encryptor.password", System.getProperties().get("jasypt.encryptor.password")
    }
}

project(":demo-api-product") {


    dependencies {

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-api-order") {

    dependencies {

    }


    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-web-front") {

    dependencies {

    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-web-backoffice") {

    dependencies {

    }


    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(":demo-gateway") {

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
